%!PS-Adobe-3.0 EPSF-3.0%%BoundingBox: 0 0 447 414%%Creator: IgorPro%%Title: Graph0%%Creation Date: Wed, Apr 3, 2019 4:20 PM%%LanguageLevel: 2%%EndComments%%BeginProlog%%EndProlog%%BeginResource: procset IgorProcset 1.0 0/IgorSave save def		% Level 2 procs

200 dict begin

0 setgray 0 setlinecap
1 setlinewidth 0 setlinejoin
1 setmiterlimit [] 0 setdash

/aw 0 def 	/ah 0 def
/x0 0 def	/y0 0 def	/x1 0 def	/y1 0 def
/rx0 0 def	/ry0 0 def	/rx1 0 def	/ry1 0 def
/tmp0 0 def /tmp1 0 def
/packedRed 0 def /packedGreen 0 def /packedBlue 0 def
/x 0 def	/y 0 def	/w 0 def	/c 0 string def

/rbak 1 def	/gbak 1 def	/bbak 1 def
/rfor 0 def	/gfor 0 def	/bfor 0 def

/bdef{bind def}bind def
/ldef{load def}bdef
/xdef{exch def}bdef

/useCMYK 0 def
/useRound false def


/Mysetrgbcolor{	% r g b
	useCMYK 1 eq
	{
		3 {1 exch sub 3 -1 roll} repeat			% c=1-r, m= 1-g, y= 1-b
		dup
		2 index 2 copy gt {exch} if pop
		3 index 2 copy gt {exch} if pop
%		2 div									% k= (min of c,m,y)/2
		4 1 roll
		3 {3 index sub 3 -1 roll} repeat		% sub k from c,m & y
		4 -1 roll
		setcmykcolor
	}
	{ setrgbcolor }
	ifelse
}bdef

%******** BEGIN NEW PAT STUFF ********** [
/transparentPats 0 def

/l {lineto} bdef
/m {moveto} bdef
/PatCom{pop transparentPats 0 eq {UseBack 0 0 8 8 rectfill} if UseFore}bdef

/SpecialPatProcs
<<
	/p0102040810204080 {PatCom 6.5 0 m 0 6.5 l 0 7.5 l 7.5 0 l 6.5 0 l 8 6.5 m 6.5 8 l 7.5 8 l 8 7.5 l 8 6.5 l fill}bind
	/p8040201008040201 {PatCom 0 0.5 m 7.5 8 l 8 8 l 8 7.5 l 0.5 0 l 0 0 l 0 0.5 l 0 7.5 m 0 8 l 0.5 8 l 0 7.5 l 7.5 0 m 8 0.5 l 8 0 l 7.5 0 l fill}bind
	/p03060C183060C081 {PatCom 5.5 0 m 0 5.5 l 0 7.5 l 7.5 0 l 5.5 0 l 8 5.5 m 5.5 8 l 7.5 8 l 8 7.5 l 8 5.5 l fill}bind
	/pC06030180C060381 {PatCom 0 0 m 0 1.5 l 6.5 8 l 8 8 l 8 7.5 l 0.5 0 l 0 0 l 0 7.5 m 0 8 l 0.5 8 l 0 7.5 l 6.5 0 m 8 1.5 l 8 0 l 6.5 0 l fill}bind
	/p83070E1C3870E0C1 {PatCom 5.5 0 m 0 5.5 l 0 8 l 0.5 8 l 8 0.5 l 8 0 l 5.5 0 l 0 0 m 0 0.5 l 0.5 0 l 0 0 l 8 5.5 m 5.5 8 l 8 8 l 8 5.5 l fill}bind
	/pC1E070381C0E0783 {PatCom 0 0 m 0 1.5 l 6.5 8 l 8 8 l 8 6.5 l 1.5 0 l 0 0 l 0 6.5 m 0 8 l 1.5 8 l 0 6.5 l 6.5 0 m 8 1.5 l 8 0 l 6.5 0 l fill}bind
	/p1122448811224488 {PatCom 2.5 0 m 0 2.5 l 0 3.5 l 3.5 0 l 2.5 0 l 6.5 0 m 0 6.5 l 0 7.5 l 7.5 0 l 6.5 0 l 8 2.5 m 2.5 8 l 3.5 8 l 8 3.5 l 8 2.5 l 8 6.5 m 6.5 8 l 7.5 8 l 8 7.5 l 8 6.5 l fill}bind
	/p8844221188442211 {PatCom 7.5 0 m 8 0.5 l 8 0 l 7.5 0 l 3.5 0 m 8 4.5 l 8 3.5 l 4.5 0 l 3.5 0 l 0 0 m 0 0.5 l 7.5 8 l 8 8 l 8 7.5 l 0.5 0 l 0 0 l 0 3.5 m 0 4.5 l 3.5 8 l 4.5 8 l 0 3.5 l 0 7.5 m 0 8 l 0.5 8 l 0 7.5 l fill}bind
	
	/p3366CC993366CC99 {PatCom 1.5 0 m 0 1.5 l 0 3.5 l 3.5 0 l 1.5 0 l 5.5 0 m 0 5.5 l 0 7.5 l 7.5 0 l 5.5 0 l 8 1.5 m 1.5 8 l 3.5 8 l 8 3.5 l 8 1.5 l 8 5.5 m 5.5 8 l 7.5 8 l 8 7.5 l 8 5.5 l fill}bind
	/pCC663399CC663399 {PatCom 6.5 0 m 8 1.5 l 8 0 l 6.5 0 l 2.5 0 m 8 5.5 l 8 3.5 l 4.5 0 l 2.5 0 l 0 0 m 0 1.5 l 6.5 8 l 8 8 l 8 7.5 l 0.5 0 l 0 0 l 0 3.5 m 0 5.5 l 2.5 8 l 4.5 8 l 0 3.5 l 0 7.5 m 0 8 l 0.5 8 l 0 7.5 l fill}bind
	/p77EEDDBB77EEDDBB {PatCom 0.5 0 m 0 0.5 l 0 3.5 l 3.5 0 l 0.5 0 l 4.5 0 m 0 4.5 l 0 7.5 l 7.5 0 l 4.5 0 l 8 0.5 m 0.5 8 l 3.5 8 l 8 3.5 l 8 0.5 l 8 4.5 m 4.5 8 l 7.5 8 l 8 7.5 l 8 4.5 l fill}bind
	/pEE77BBDDEE77BBDD {PatCom 0 0 m 0 2.5 l 5.5 8 l 8 8 l 8 7.5 l 0.5 0 l 0 0 l 1.5 0 m 8 6.5 l 8 3.5 l 4.5 0 l 1.5 0 l 5.5 0 m 8 2.5 l 8 0 l 5.5 0 l 0 3.5 m 0 6.5 l 1.5 8 l 4.5 8 l 0 3.5 l 0 7.5 m 0 8 l 0.5 8 l 0 7.5 l fill}bind
	/pE4C993274E9C3972 {PatCom 0 0 m 0 2.5 l 2.5 0 l 0 0 l 4.5 0 m 0 4.5 l 0 5.5 l 5.5 0 l 4.5 0 l 7.5 0 m 0 7.5 l 0 8 l 2.5 8 l 8 2.5 l 8 0 l 7.5 0 l 8 4.5 m 4.5 8 l 5.5 8 l 8 5.5 l 8 4.5 l 8 7.5 m 7.5 8 l 8 8 l 8 7.5 l fill}bind
	/p2793C9E472399C4E {PatCom 5.5 0 m 8 2.5 l 8 1.5 l 6.5 0 l 5.5 0 l 0.5 0 m 8 7.5 l 8 4.5 l 3.5 0 l 0.5 0 l 0 1.5 m 0 2.5 l 5.5 8 l 6.5 8 l 0 1.5 l 0 4.5 m 0 7.5 l 0.5 8 l 3.5 8 l 0 4.5 l fill}bind
>>
def

/Pat8Image2{			% patternstring -- 
	transparentPats 0 eq {UseBack 0 0 8 8 rectfill} if
	UseFore
	0 exch									% y patstr
	{
		0 exch								% y x value
		128 8{								% y x value bitmask
			dup 2 index and 0 eq not{		% y x bitmask value boolval
				2 index 4 index 1 1 rectfill
			}if
			-1 bitshift 3 2 roll 
			1 add
			3 1 roll
		}repeat
		pop pop pop
		1 add
	}forall
	pop
}bdef

/PatstrToName{
	(p0000000000000000)	17 string copy	% apparantly literal strings are global objects
	exch 1 exch
	{
		16 (00) cvrs dup length 
		3 index 3 index 3 -1 roll 2 exch sub add
		3 -1 roll putinterval
		2 add
	}forall
	pop
	cvn
}bdef



/ThePatTemplate
<<
	/PatternType 1		% Tiling pattern
	/PaintType 1		% Colored
	/TilingType 1
	/BBox [0 0 8 8]
	/XStep 8
	/YStep 8
	/mypatstr <03060C183060C081>
	/PaintProc {begin mypatstr Pat8Image2 end}bind
>>
def



/FillPattern{	% patternstring --
	gsave
	ThePatTemplate /mypatstr 2 index put
	PatstrToName SpecialPatProcs 1 index known{
		SpecialPatProcs exch get
	}{
		{begin mypatstr Pat8Image2 end}bind
	}ifelse
	ThePatTemplate /PaintProc 3 -1 roll put
	ThePatTemplate matrix makepattern setpattern fill
	grestore
	/transparentPats 0 def
}bdef

%******** END NEW PAT STUFF ********** ]



/UseBack{ rbak gbak bbak Mysetrgbcolor }bdef
/UseFore{ rfor gfor bfor Mysetrgbcolor }bdef
/SetBack {/bbak xdef /gbak xdef /rbak xdef }bdef
/SetFore {/bfor xdef /gfor xdef /rfor xdef }bdef


/ps {setlinewidth} bdef	
/clw {currentlinewidth} bdef
/sd {0 setdash} bdef

/mstroke {0 clw eq {newpath}{stroke} ifelse} bdef

/_R{ .5 sub round .5 add}bdef
/allign{ useRound {transform _R exch _R exch itransform} if }bdef
/L {allign lineto} bdef
/M {allign moveto} bdef

/addto { dup load exec 3 -1 roll add store }bdef
/MacLine{		% xto yto xfrom yfrom MacLine --
	newpath		% only handles horizontal or vertical lines
	/y0 xdef /x0 xdef /y1 xdef /x1 xdef
	x1 x0 sub abs
	y1 y0 sub abs gt
	{clw x1 x0 gt {/x1}{/x0}ifelse  addto  clw 2 div dup /y0 addto /y1 addto}
	{clw y1 y0 gt {/y1}{/y0}ifelse  addto  clw 2 div dup /x0 addto /x1 addto}
	ifelse
	x0 y0 M
	x1 y1 L
	mstroke
}bdef

/FillPath{		% graylevel FillPath --   fills current path and leaves path alive
	gsave
	dup 1 exch sub		% glev 1-glev
	rbak 2 index mul	rfor 2 index mul add
	gbak 3 index mul	gfor 3 index mul add
	bbak 4 index mul	bfor 4 index mul add
	Mysetrgbcolor
	pop pop
	fill
	grestore
}bdef

/StrokePath{		% linejoin StrokePath --   strokes current path and leaves path alive
	gsave
	setlinejoin
	mstroke
	grestore
}bdef

/RectPath{		% x0 y0 x1 y1 RectPath -- sets current path to a rectange
	/y1 xdef /x1 xdef /y0 xdef /x0 xdef
	newpath
	x0 y0 M
	x1 y0 L
	x1 y1 L
	x0 y1 L
	closepath
}bdef

/PaintRect{		% x0 y0 x1 y1 graylevel PaintRect --
	gsave
	5 1 roll
	RectPath
	FillPath
	grestore
}bdef




% **** begin image stuff *****
% The following are used for images. This has to be kept
% in synch with corresponding code in ImageDisp.c.In particular
% the expansion factor, 8, has to be in synch. LH010606: now to
% fix colorscales in layouts, expansion factor is in variable.
% packedcolor is (red*256+green)*256+blue

/ExpFact 8 def	% default expansion factor

/SetPackedColor{	% packedcolor SetPackedColor --
	dup 256 mod /tmp0 xdef	% extract blue
	256 idiv
	dup 256 mod /tmp1 xdef	% extract green
	256 idiv 				% extract red
	255 div /packedRed xdef
	tmp1 255 div /packedGreen xdef
	tmp0 255 div /packedBlue xdef
}bdef

/IR_FillRect{
	gsave
	newpath
	rx0 ry0 M
	rx1 ry0 L
	rx1 ry1 L
	rx0 ry1 L
	closepath
	packedRed packedGreen packedBlue Mysetrgbcolor
	fill
	grestore
}bdef

/NewRectImageLine{	% x0 y0 x1 y1 packedcolor NewRectImageLine --
	SetPackedColor

	/ry1 xdef /rx1 xdef /ry0 xdef /rx0 xdef	% remember starting rectange for following calls
	
	IR_FillRect
}bdef

/rx{		% xdist rx --
	ExpFact div
	dup 0 lt
	{ rx0 /rx1 xdef rx1 add /rx0 xdef }		% neg delta steps left
	{ rx1 /rx0 xdef rx0 add /rx1 xdef }
	ifelse
	IR_FillRect
}bdef

/ry{		% ydist rr --
	ExpFact div
	dup 0 lt
	{ ry1 /ry0 xdef ry0 exch sub /ry1 xdef }		% neg delta steps down
	{ ry0 /ry1 xdef ry1 exch sub /ry0 xdef }
	ifelse
	IR_FillRect
}bdef


/cx{		% xdist packedcolor cx --
	SetPackedColor
	rx
}bdef

/cy{		% ydist packedcolor cx --
	SetPackedColor
	ry
}bdef

% **** end image stuff *****



/EraseRect{		% x0 y0 x1 y1 EraseRect --  fills rect with background color
	gsave
	RectPath
	UseBack fill
	grestore
}bdef

/FrameRect{		% x0 y0 x1 y1 FrameRect --
	RectPath
	mstroke
}bdef

/FrameMacRect{		% x0 y0 x1 y1 FrameMacRect --  Mac-like version
	RectPath
	mstroke
}bdef


/ellipse{
	/savematrix matrix currentmatrix def
	translate scale 0 0 1 0 360 arc
	savematrix setmatrix
}bdef



/OvalPath{		% x0 y0 x1 y1 OvalPath -- sets current path to an oval inside rectange
	/y1 xdef /x1 xdef /y0 xdef /x0 xdef
	newpath
	x0 x1 sub abs 2 div y0 y1 sub abs 2 div x0 x1 add 2 div y0 y1 add 2 div ellipse
	closepath
}bdef


/PaintOval{		% x0 y0 x1 y1 graylevel PaintOval --
	gsave
	5 1 roll
	OvalPath
	FillPath
	grestore
}bdef

/EraseOval{		% x0 y0 x1 y1 EraseOval --  fills with background color
	gsave
	OvalPath
	UseBack fill
	grestore
}bdef

/FrameOval{		% x0 y0 x1 y1 FrameOval --
	OvalPath
	mstroke
}bdef


/RRectPath{		% x0 y0 x1 y1 r OvalPath -- sets current path to rounded rectange, radius r
	/radius xdef
	/y1 xdef /x1 xdef /y0 xdef /x0 xdef
	newpath
	x0 radius add y0 M
	x1 y0 x1 y1 radius arcto 4{pop}repeat
	x1 y1 x0 y1 radius arcto 4{pop}repeat
	x0 y1 x0 y0 radius arcto 4{pop}repeat
	x0 y0 x1 y0 radius arcto 4{pop}repeat
	closepath
}bdef


/PaintRRect{		% x0 y0 x1 y1 r graylevel PaintRRect --
	gsave
	6 1 roll
	RRectPath
	FillPath
	grestore
}bdef

/EraseRRect{		% x0 y0 x1 y1 r EraseRRect --  fills rect with background color
	gsave
	RRectPath
	UseBack fill
	grestore
}bdef

/FrameRRect{		% x0 y0 x1 y1 r FrameRect --
	RRectPath
	mstroke
}bdef




/CapLine{		% x0 y0 x1 y1 linecap CapLine -- draws line using given line cap
	gsave
	setlinecap
	/y1 xdef /x1 xdef /y0 xdef /x0 xdef
	newpath
	x0 y0 M
	x1 y1 L
	mstroke
	grestore
}bdef

/Arrow{		% x0 y0 x1 y1 width height graylevel Arrow -- draws arrow at end of line from P0 to P1
	gsave
	/gl xdef 1 add /aw xdef 1 add /ah xdef /y0 xdef /x0 xdef /y1 xdef /x1 xdef 
	x0 y0 translate
	/x1 x1 x0 sub def
	/y1 y1 y0 sub def
	y1 x1 atan rotate
	newpath
	0 0 M
	aw ah 2 div L
	aw ah 2 div neg L
	closepath
	gl FillPath
%	10 setmiterlimit
%	1 ps
%	0 StrokePath
	grestore
}bdef


% ************ fonts ************


/normal 0 def
/bold 1 def
/italic 2 def
/underline 4 def
/outline 8 def
/shadow 16 def

/FACE1 bold italic or def
/FACE2 outline shadow or def

/Shadow {
	gsave
	siz 0.08 mul 1 index mul x add
	exch siz 0.07 mul mul y add M
	c show
	grestore
} def

/Outline {
	gsave
	siz .02 mul setlinewidth
	x y M c true charpath
	gsave UseBack fill grestore stroke
	grestore
} def

/Underline{
	gsave
	siz 0.08 mul ps
	x y clw add M x c stringwidth pop add y clw add L stroke
	grestore
}bdef

/DoShow{	% assumes x,y,c are already set
	fontkind FACE2 and
	dup normal eq 				{c x y M show} if
	dup outline eq 				{Outline} if
	dup shadow eq 				{1 Shadow Outline} if
	outline shadow or eq 		{1 Shadow 1.5 Shadow Outline} if
	fontkind underline and 0 ne { Underline } if
}bdef

/DoWShow{	% assumes x,y,c & w are already set
	gsave
	x y translate
	/x 0 def  /y 0 def
	w c stringwidth pop div 1 scale
	DoShow
	grestore
}bdef

/S{
	/y xdef /x xdef /c xdef
	DoShow
}bdef

/WS{		% string x y desiredwidth WS -
	/w xdef /y xdef /x xdef /c xdef
	DoWShow
}bdef

/F{
	/fontkind xdef
	findfont exch /siz xdef [siz 0 0 siz neg  0 0] makefont setfont
}bdef



/Re-encode {
	dup length array copy
	/eap 0 def
	exch {
		dup type /integertype eq
		{ /eap xdef }
		{
			1 index
			exch
			eap exch
			put
			/eap eap 1 add def
		}
		ifelse
	} forall
} bind def

[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron]
/zzz xdef

/OurEncoding{ zzz StandardEncoding Re-encode }bdef

/EncodeFont	{
	findfont
	dup length dict begin
	{
		1 index /FID ne
		{ def }
		{ pop pop }
		ifelse
	} forall
	/FontName xdef
	/Encoding xdef
	FontName currentdict
	end
	definefont pop
} bind def

%%EndResource%%BeginFont: /OF011 dict begin/FontName /OF0 def% TT Name: Helvetica/FontType 3 def/FontMatrix [0.001 0 0 -0.001 0 0] def/FontBBox [25 -702 517 20] def/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}forEncoding 32 /s32 putEncoding 33 /s33 putEncoding 34 /s34 putEncoding 35 /s35 putEncoding 36 /s36 putEncoding 37 /s37 putEncoding 38 /s38 put/BoundingBoxes 7 dict defBoundingBoxes begin/s32 [31 -702 515 0] def/s33 [32 -688 514 18] def/s34 [31 -699 514 19] def/s35 [96 -696 354 0] def/s36 [32 -701 513 20] def/s37 [38 -702 517 18] def/s38 [25 -701 523 0] defend/Metrics 7 dict def Metrics begin/s32 556 def/s33 556 def/s34 556 def/s35 556 def/s36 556 def/s37 556 def/s38 556 defend/CharProcs 7 dict def CharProcs begin/.notdef {} def/s32 {69 -157 moveto90 -202 132 -242 195 -279 curveto289 -333 195 -279 289 -333 curveto331 -357 361 -378 377 -396 curveto404 -423 417 -453 417 -488 curveto417 -529 405 -561 381 -585 curveto356 -609 324 -621 283 -621 curveto223 -621 181 -598 158 -553 curveto146 -528 139 -494 138 -451 curveto48 -451 138 -451 48 -451 curveto49 -512 61 -562 82 -600 curveto120 -668 187 -702 284 -702 curveto364 -702 422 -680 459 -637 curveto496 -593 515 -545 515 -492 curveto515 -436 495 -388 456 -349 curveto433 -326 392 -298 333 -265 curveto266 -228 333 -265 266 -228 curveto234 -210 209 -193 191 -177 curveto158 -149 138 -118 129 -83 curveto511 -83 129 -83 511 -83 curveto511 0 511 -83 511 0 curveto31 0 511 0 31 0 curveto35 -60 47 -113 69 -157 curvetoclosepath} bind def/s33 {124 -178 moveto129 -128 153 -93 193 -74 curveto214 -64 238 -60 266 -60 curveto318 -60 356 -76 381 -109 curveto406 -143 419 -179 419 -220 curveto419 -269 404 -306 374 -333 curveto344 -360 309 -373 267 -373 curveto237 -373 211 -367 189 -355 curveto168 -344 149 -327 134 -307 curveto58 -311 134 -307 58 -311 curveto111 -688 58 -311 111 -688 curveto474 -688 111 -688 474 -688 curveto474 -603 474 -688 474 -603 curveto177 -603 474 -603 177 -603 curveto147 -408 177 -603 147 -408 curveto163 -421 179 -430 193 -436 curveto219 -447 250 -452 284 -452 curveto348 -452 402 -431 447 -390 curveto491 -349 514 -296 514 -233 curveto514 -167 493 -109 452 -58 curveto412 -8 346 18 257 18 curveto200 18 149 2 106 -31 curveto62 -63 37 -112 32 -178 curveto124 -178 32 -178 124 -178 curvetoclosepath} bind def/s34 {467 -587 moveto498 -530 514 -451 514 -351 curveto514 -256 500 -177 471 -115 curveto430 -26 363 19 270 19 curveto186 19 124 -17 83 -90 curveto48 -151 31 -233 31 -335 curveto31 -415 42 -483 62 -540 curveto100 -646 170 -699 271 -699 curveto361 -699 426 -662 467 -587 curvetoclosepath378 -122 moveto405 -162 419 -237 419 -347 curveto419 -427 409 -492 390 -543 curveto370 -594 332 -620 276 -620 curveto224 -620 186 -596 162 -547 curveto138 -498 126 -427 126 -332 curveto126 -261 134 -203 149 -160 curveto173 -94 213 -61 270 -61 curveto315 -61 351 -81 378 -122 curvetoclosepath} bind def/s35 {96 -495 moveto96 -562 96 -495 96 -562 curveto159 -569 203 -579 229 -594 curveto254 -608 272 -642 285 -696 curveto354 -696 285 -696 354 -696 curveto354 0 354 -696 354 0 curveto260 0 354 0 260 0 curveto260 -495 260 0 260 -495 curveto96 -495 260 -495 96 -495 curvetoclosepath} bind def/s36 {363 -439 moveto385 -460 396 -486 396 -516 curveto396 -542 385 -566 364 -588 curveto343 -610 312 -621 269 -621 curveto227 -621 196 -610 177 -588 curveto158 -566 149 -541 149 -511 curveto149 -478 161 -453 186 -434 curveto210 -416 239 -406 272 -406 curveto311 -406 341 -417 363 -439 curvetoclosepath379 -93 moveto406 -115 419 -148 419 -191 curveto419 -237 405 -271 377 -294 curveto350 -318 314 -330 271 -330 curveto229 -330 195 -318 168 -294 curveto142 -270 128 -237 128 -194 curveto128 -158 141 -126 165 -100 curveto189 -73 227 -60 277 -60 curveto318 -60 352 -71 379 -93 curvetoclosepath95 -409 moveto69 -435 57 -469 57 -511 curveto57 -563 76 -608 113 -645 curveto151 -682 205 -701 274 -701 curveto341 -701 394 -684 432 -648 curveto470 -613 489 -572 489 -524 curveto489 -481 478 -445 456 -418 curveto443 -403 424 -388 398 -374 curveto427 -360 450 -345 466 -328 curveto497 -295 513 -253 513 -201 curveto513 -139 492 -87 451 -44 curveto409 -1 351 20 275 20 curveto207 20 150 2 103 -35 curveto56 -72 32 -126 32 -196 curveto32 -238 42 -273 62 -303 curveto83 -334 113 -357 152 -373 curveto128 -383 109 -395 95 -409 curvetoclosepath} bind def/s37 {456 -641 moveto487 -601 502 -559 502 -516 curveto415 -516 502 -516 415 -516 curveto410 -544 402 -565 390 -581 curveto369 -610 337 -625 294 -625 curveto245 -625 206 -602 177 -557 curveto148 -511 132 -446 128 -362 curveto149 -391 174 -414 205 -428 curveto233 -441 264 -448 298 -448 curveto357 -448 408 -429 452 -392 curveto495 -354 517 -298 517 -224 curveto517 -161 496 -104 455 -55 curveto414 -6 355 18 278 18 curveto213 18 156 -7 109 -56 curveto61 -106 38 -190 38 -307 curveto38 -394 48 -468 69 -528 curveto110 -644 184 -702 292 -702 curveto371 -702 425 -682 456 -641 curvetoclosepath390 -107 moveto413 -138 424 -174 424 -217 curveto424 -253 414 -287 394 -319 curveto373 -351 336 -368 282 -368 curveto244 -368 211 -355 182 -330 curveto154 -305 140 -267 140 -217 curveto140 -173 153 -135 178 -105 curveto204 -75 240 -60 286 -60 curveto332 -60 367 -76 390 -107 curvetoclosepath} bind def/s38 {331 -248 moveto331 -564 331 -248 331 -564 curveto106 -248 331 -564 106 -248 curveto331 -248 106 -248 331 -248 curvetoclosepath332 0 moveto332 -171 332 0 332 -171 curveto25 -171 332 -171 25 -171 curveto25 -257 25 -171 25 -257 curveto346 -701 25 -257 346 -701 curveto420 -701 346 -701 420 -701 curveto420 -248 420 -701 420 -248 curveto523 -248 420 -248 523 -248 curveto523 -171 523 -248 523 -171 curveto420 -171 523 -171 420 -171 curveto420 0 420 -171 420 0 curveto332 0 420 0 332 0 curvetoclosepath} bind defend/BuildGlyph { exch begin dup Metrics exch get 0 2 index BoundingBoxes exch get aload pop setcachedevice CharProcs exch 2 copy known not{pop/.notdef}if get exec fill end } def/BuildChar { 1 index /Encoding get exch get 1 index /BuildGlyph get exec } bind defcurrentdict end /OF0 exch definefont pop%%EndFont0 414 translate  1 -1 scale/AnObj save def1 1 1 SetBack   0 0 0 SetFore  UseFore0 0 translategsave0.000 0.000 0.000 setrgbcolorgsave 1.00 ps [ ] sd newpath 56.62 10.12 M 56.62 373.00 L mstroke grestoregsave 1.00 ps [ ] sd newpath 420.50 10.12 M 420.50 373.00 L mstroke grestoregsave 1.00 ps [ ] sd newpath 47.75 17.75 M 57.12 17.75 L mstroke grestoregsave[1.00 0.00 0.00 1.00 23.62 11.75] concat12.00 (OF0) 0 F( !") 0.00 9.25 20.00 WSgrestoregsave 1.00 ps [ ] sd newpath 47.75 88.38 M 57.12 88.38 L mstroke grestoregsave[1.00 0.00 0.00 1.00 23.62 82.38] concat12.00 (OF0) 0 F( "") 0.00 9.25 20.00 WSgrestoregsave 1.00 ps [ ] sd newpath 47.75 159.12 M 57.12 159.12 L mstroke grestoregsave[1.00 0.00 0.00 1.00 23.62 153.12] concat12.00 (OF0) 0 F(#!") 0.00 9.25 20.00 WSgrestoregsave 1.00 ps [ ] sd newpath 47.75 229.75 M 57.12 229.75 L mstroke grestoregsave[1.00 0.00 0.00 1.00 23.62 223.75] concat12.00 (OF0) 0 F(#"") 0.00 9.25 20.00 WSgrestoregsave 1.00 ps [ ] sd newpath 47.75 300.38 M 57.12 300.38 L mstroke grestoregsave[1.00 0.00 0.00 1.00 30.25 294.38] concat12.00 (OF0) 0 F(!") 0.00 9.25 13.38 WSgrestoregsave 1.00 ps [ ] sd newpath 47.75 371.00 M 57.12 371.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 37.00 365.00] concat12.00 (OF0) 0 F(") 0.00 9.25 6.62 WSgrestoregsave 1.00 ps [ ] sd newpath 56.12 373.50 M 421.00 373.50 L mstroke grestoregsave 1.00 ps [ ] sd newpath 56.12 9.62 M 421.00 9.62 L mstroke grestoregsave 1.00 ps [ ] sd newpath 398.25 382.38 M 398.25 373.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 388.25 387.00] concat12.00 (OF0) 0 F(# ") 0.00 9.25 20.00 WSgrestoregsave 1.00 ps [ ] sd newpath 341.75 382.38 M 341.75 373.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 331.75 387.00] concat12.00 (OF0) 0 F(#"") 0.00 9.25 20.00 WSgrestoregsave 1.00 ps [ ] sd newpath 285.25 382.38 M 285.25 373.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 278.62 387.00] concat12.00 (OF0) 0 F($") 0.00 9.25 13.38 WSgrestoregsave 1.00 ps [ ] sd newpath 228.62 382.38 M 228.62 373.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 222.00 387.00] concat12.00 (OF0) 0 F(%") 0.00 9.25 13.38 WSgrestoregsave 1.00 ps [ ] sd newpath 172.12 382.38 M 172.12 373.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 165.50 387.00] concat12.00 (OF0) 0 F(&") 0.00 9.25 13.38 WSgrestoregsave 1.00 ps [ ] sd newpath 115.62 382.38 M 115.62 373.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 109.00 387.00] concat12.00 (OF0) 0 F( ") 0.00 9.25 13.38 WSgrestoregsave 1.00 ps [ ] sd newpath 59.12 382.38 M 59.12 373.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 55.88 387.00] concat12.00 (OF0) 0 F(") 0.00 9.25 6.62 WSgrestoregrestoregsave[ ] sdnewpath 59.12 371.00 M62.00 368.12 L64.75 365.38 L67.62 362.50 L70.38 359.75 L73.25 356.88 L76.12 354.00 L78.88 351.25 L81.75 348.38 L84.50 345.62 L87.38 342.75 L90.25 339.88 L93.00 337.12 L95.88 334.25 L98.62 331.50 L101.50 328.62 L104.38 325.75 L107.12 323.00 L110.00 320.12 L112.88 317.25 L115.62 314.50 L118.50 311.62 L121.25 308.88 L124.12 306.00 L127.00 303.12 L129.75 300.38 L132.62 297.50 L135.38 294.75 L138.25 291.88 L141.12 289.00 L143.88 286.25 L146.75 283.38 L149.50 280.62 L152.38 277.75 L155.25 274.88 L158.00 272.12 L160.88 269.25 L163.62 266.50 L166.50 263.62 L169.38 260.75 L172.12 258.00 L175.00 255.12 L177.75 252.38 L180.62 249.50 L183.50 246.62 L186.25 243.88 L189.12 241.00 L191.88 238.25 L194.75 235.38 L197.62 232.50 L200.38 229.75 L203.25 226.88 L206.12 224.00 L208.88 221.25 L211.75 218.38 L214.50 215.62 L217.38 212.75 L220.25 209.88 L223.00 207.12 L225.88 204.25 L228.62 201.50 L231.50 198.62 L234.38 195.75 L237.12 193.00 L240.00 190.12 L242.75 187.38 L245.62 184.50 L248.50 181.62 L251.25 178.88 L254.12 176.00 L256.88 173.25 L259.75 170.38 L262.62 167.50 L265.38 164.75 L268.25 161.88 L271.00 159.12 L273.88 156.25 L276.75 153.38 L279.50 150.62 L282.38 147.75 L285.25 144.88 L288.00 142.12 L290.88 139.25 L293.62 136.50 L296.50 133.62 L299.38 130.75 L302.12 128.00 L305.00 125.12 L307.75 122.38 L310.62 119.50 L313.50 116.62 L316.25 113.88 L319.12 111.00 L321.88 108.25 L324.75 105.38 L327.62 102.50 L330.38 99.75 L333.25 96.88 L336.00 94.12 L338.88 91.25 L341.75 88.38 L344.50 85.62 L347.38 82.75 L350.12 80.00 L353.00 77.12 L355.88 74.25 L358.62 71.50 L361.50 68.62 L364.25 65.88 L367.12 63.00 L370.00 60.12 L372.75 57.38 L375.62 54.50 L378.50 51.62 L381.25 48.88 L384.12 46.00 L386.88 43.25 L389.75 40.38 L392.62 37.50 L395.38 34.75 L398.25 31.88 L401.00 29.12 L403.88 26.25 L406.75 23.38 L409.50 20.62 L412.38 17.75 L415.12 15.00 L418.00 12.12 L1.000 0.000 0.000 setrgbcolor2 setlinejoingsave 2.00 ps mstroke grestoregrestoregsavegrestoreAnObj restoreendIgorSave restore%%Trailer%%EOF